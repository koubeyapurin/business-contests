/**
 * PWA„Ç§„É≥„Çπ„Éà„Éº„É´„Éú„Çø„É≥„Å®„Éó„É≠„É≥„Éó„Éà
 */

let deferredPrompt;
let installButton;

// „Ç§„É≥„Çπ„Éà„Éº„É´„Éú„Çø„É≥„Çí‰ΩúÊàê
function createInstallButton() {
    installButton = document.createElement('button');
    installButton.id = 'installButton';
    installButton.className = 'install-app-btn';
    installButton.innerHTML = 'üì± „Ç¢„Éó„É™„Çí„Ç§„É≥„Çπ„Éà„Éº„É´';
    installButton.style.display = 'none';
    
    installButton.addEventListener('click', async () => {
        if (!deferredPrompt) {
            return;
        }
        
        deferredPrompt.prompt();
        const { outcome } = await deferredPrompt.userChoice;
        console.log(`User response to the install prompt: ${outcome}`);
        
        deferredPrompt = null;
        installButton.style.display = 'none';
    });
    
    document.body.appendChild(installButton);
}

// „Éö„Éº„Ç∏Ë™≠„ÅøËæº„ÅøÊôÇ„Å´„Éú„Çø„É≥„Çí‰ΩúÊàê
window.addEventListener('DOMContentLoaded', () => {
    createInstallButton();
});

// „Ç§„É≥„Çπ„Éà„Éº„É´ÂèØËÉΩ„Å´„Å™„Å£„Åü„Å®„Åç
window.addEventListener('beforeinstallprompt', (e) => {
    console.log('üì± PWA install prompt available');
    e.preventDefault();
    deferredPrompt = e;
    
    // „Ç§„É≥„Çπ„Éà„Éº„É´„Éú„Çø„É≥„ÇíË°®Á§∫
    if (installButton) {
        installButton.style.display = 'block';
    }
});

// „Ç§„É≥„Çπ„Éà„Éº„É´ÂÆå‰∫ÜÊôÇ
window.addEventListener('appinstalled', () => {
    console.log('‚úÖ PWA was installed');
    deferredPrompt = null;
    if (installButton) {
        installButton.style.display = 'none';
    }
    
    // ÂÆå‰∫Ü„É°„ÉÉ„Çª„Éº„Ç∏„ÇíË°®Á§∫
    alert('üéâ „Ç§„Ç±ÈÖç„Ç¢„Éó„É™„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Åæ„Åó„ÅüÔºÅ\n„Éõ„Éº„É†ÁîªÈù¢„Åã„ÇâËµ∑Âãï„Åß„Åç„Åæ„Åô„ÄÇ');
});

// Service WorkerÁôªÈå≤
if ('serviceWorker' in navigator) {
    window.addEventListener('load', () => {
        navigator.serviceWorker.register('/service-worker.js')
            .then((registration) => {
                console.log('‚úÖ Service Worker registered:', registration.scope);
            })
            .catch((error) => {
                console.log('‚ùå Service Worker registration failed:', error);
            });
    });
}

